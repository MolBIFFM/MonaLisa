/*
 *
 *  This file ist part of the software MonaLisa.
 *  MonaLisa is free software, dependend on non-free software. For more information read LICENCE and README.
 *
 *  (c) Department of Molecular Bioinformatics, Institute of Computer Science, Johann Wolfgang
 *  Goethe-University Frankfurt am Main, Germany
 *
 */
package monalisa.addons.tokensimulator;

import java.util.Collection;
import java.util.HashMap;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import monalisa.data.pn.Place;

/**
 * Configuration used for creating a gnuplot-file for simulation results.
 * Not used in the current version.
 * @author Pavel Balazki
 */
public class GnuplotConfig extends javax.swing.JFrame {
    //BEGIN VARIABLES DECLARATION
    /**
     * Output format of gnuplot.
     */
    private String outputFormat = "png";
    private String plotStyle = "points";
    private boolean xLog = false;
    private boolean yLog = false;
    /**
     * List of place IDs with corresponding check box.
     */
    protected HashMap<Integer, JCheckBox> placesSelecion = new HashMap<>();
    //END VARIABLES DECLARATION

    //BEGIN CONSTRUCTORS
    /**
     * Creates new form GnuplotConfigFrame
     * @param places Collection of places of the system which values can be plotted.
     */
    public GnuplotConfig(Collection<Place> places) {
        initComponents();
        this.placesSelectionPanel.setLayout(new BoxLayout(placesSelectionPanel, BoxLayout.Y_AXIS));
        /*
         * Create a check box for each place of the net.
         */
        for (Place p : places){
            JCheckBox cb = new JCheckBox(p.getProperty("name").toString());
            cb.setSelected(true);
            this.placesSelectionPanel.add(cb);
            this.placesSelecion.put(p.id(), cb);
        }
        this.placesSelectionPanel.repaint();
    }
    //END CONSTRUCTORS

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        outFormatBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        plotStlyeBox = new javax.swing.JComboBox();
        logXScaleCB = new javax.swing.JCheckBox();
        logYScaleCB = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        placesSelectionPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("gnuplot configuration");
        setAlwaysOnTop(true);
        setIconImage(TokenSimulator.resources.getImage("icon-16.png"));

        saveButton.setText(TokenSimulator.strings.get("Save"));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(TokenSimulator.strings.get("Cancel"));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(TokenSimulator.strings.get("GNUOutFormat"));

        outFormatBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "png", "pdf" }));

        jLabel2.setText(TokenSimulator.strings.get("GNUPlotStyle"));

        plotStlyeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "points", "lines", "linespoints", "impulses", "dots", "steps", "fsteps", "histeps", "errorbars", "xerrorbars", "yerrorbars", "xyerrorbars", "boxes", "boxerrorbars", "boxxyerrorbars" }));

        logXScaleCB.setText(TokenSimulator.strings.get("LogXScale"));

        logYScaleCB.setText(TokenSimulator.strings.get("LogYScale"));

        javax.swing.GroupLayout placesSelectionPanelLayout = new javax.swing.GroupLayout(placesSelectionPanel);
        placesSelectionPanel.setLayout(placesSelectionPanelLayout);
        placesSelectionPanelLayout.setHorizontalGroup(
            placesSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        placesSelectionPanelLayout.setVerticalGroup(
            placesSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(placesSelectionPanel);

        jLabel3.setText(TokenSimulator.strings.get("PlotFor"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton))
                    .addComponent(logYScaleCB)
                    .addComponent(logXScaleCB)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outFormatBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plotStlyeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(outFormatBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(plotStlyeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(logXScaleCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logYScaleCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton)
                            .addComponent(cancelButton)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        outputFormat = ((String) this.outFormatBox.getSelectedItem());
        plotStyle = ((String) this.plotStlyeBox.getSelectedItem());
        xLog = (this.logXScaleCB.isSelected());
        yLog = (this.logYScaleCB.isSelected());
        this.setVisible(false);
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox logXScaleCB;
    private javax.swing.JCheckBox logYScaleCB;
    private javax.swing.JComboBox outFormatBox;
    private javax.swing.JPanel placesSelectionPanel;
    private javax.swing.JComboBox plotStlyeBox;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the outputFormat
     */
    public String getOutputFormat() {
        return outputFormat;
    }

    /**
     * @return the plotStyle
     */
    public String getPlotStyle() {
        return plotStyle;
    }

    /**
     * @return the xLog
     */
    public boolean getXLog() {
        return xLog;
    }

    /**
     * @return the yLog
     */
    public boolean getYLog() {
        return yLog;
    }
}
