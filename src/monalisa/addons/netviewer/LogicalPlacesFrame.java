/*
 *
 *  This file ist part of the software MonaLisa.
 *  MonaLisa is free software, dependend on non-free software. For more information read LICENCE and README.
 *
 *  (c) Department of Molecular Bioinformatics, Institue of Computer Science, Johann Wolfgang
 *  Goethe-University Frankfurt am Main, Germany
 *
 */

package monalisa.addons.netviewer;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import monalisa.util.MonaLisaWindowListener;
import monalisa.resources.ResourceManager;
import monalisa.resources.StringResources;
import monalisa.synchronisation.Synchronizer;

/**
 * Dialoge to create a new logical place
 * @author Jens Einloft
 */
public class LogicalPlacesFrame extends javax.swing.JFrame {
    private static final long serialVersionUID = 5930120755823294841L;  
    
    public LogicalPlacesFrame(final NetViewer netViewer, Synchronizer synchronizer) {
        this.netViewer = netViewer;
        this.synchronizer = synchronizer;
        initComponents();
        neighborsList.setCellRenderer(new LogicalPlacesListCellRenderer());
        // By selection of a transition in the list, the edges from the place to this transition are selected / marked
        neighborsList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                NetViewerEdge edge;
                NetViewerNode aim = (NetViewerNode)netViewer.vv.getRenderContext().getPickedVertexState().getPicked().toArray()[0];
                netViewer.vv.getRenderContext().getPickedEdgeState().clear();
                for(Object obj : neighborsList.getSelectedValuesList()) {
                    // Place->Transition or Transition->Place??
                    edge = netViewer.g.findEdge(aim, (NetViewerNode)obj);
                    if(edge == null)
                        edge = netViewer.g.findEdge((NetViewerNode)obj, aim);
                    if(edge != null) {
                        if(edge.getMasterEdge().getBendEdges().isEmpty())
                            netViewer.vv.getRenderContext().getPickedEdgeState().pick(edge, true);
                        else {
                            for(NetViewerEdge bendEdges : edge.getMasterEdge().getBendEdges())
                                netViewer.vv.getRenderContext().getPickedEdgeState().pick(bendEdges, true);
                        }
                    }
                }
            }
        });
        addWindowListener(new MonaLisaWindowListener(this.netViewer));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        neighborsList = new javax.swing.JList<>();
        createButton = new javax.swing.JButton();
        createAllButton = new javax.swing.JButton();

        setTitle("Locigal Species");
        setIconImage(resources.getImage("icon-16.png"));

        jPanel1.setPreferredSize(new java.awt.Dimension(290, 340));

        title.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        title.setText("Neighbor Reactions");

        neighborsList.setModel(new DefaultListModel<NetViewerNode>());
        neighborsList.setToolTipText(strings.get("NVToolTipLocigalPlace"));
        jScrollPane1.setViewportView(neighborsList);

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        createAllButton.setText("Create all");
        createAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(title)
                        .addContainerGap(132, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                        .addComponent(createAllButton)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(createAllButton))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        this.synchronizer.addLogicalPlace((NetViewerNode) this.netViewer.vv.getPickedVertexState().getPicked().toArray()[0], neighborsList.getSelectedValuesList(), null);
        this.netViewer.nonModificationActionHappend();
        this.setVisible(false);
        this.netViewer.setEnabled(true);
    }//GEN-LAST:event_createButtonActionPerformed

    private void createAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAllButtonActionPerformed
        NetViewerNode sourceNode = (NetViewerNode) netViewer.vv.getPickedVertexState().getPicked().toArray()[0];
        List<NetViewerNode> selectedNodes;
        for(int i = 0; i < neighborsList.getModel().getSize()-1; i++) {
            selectedNodes = new ArrayList<>();
            selectedNodes.add(neighborsList.getModel().getElementAt(i));
            synchronizer.addLogicalPlace(sourceNode, selectedNodes, null);                
        }
        this.netViewer.nonModificationActionHappend();
        this.setVisible(false);
        this.netViewer.setEnabled(true);
    }//GEN-LAST:event_createAllButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createAllButton;
    private javax.swing.JButton createButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    protected javax.swing.JList<NetViewerNode> neighborsList;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private static final ResourceManager resources = ResourceManager.instance();
    private static final StringResources strings = resources.getDefaultStrings();

    private final NetViewer netViewer;
    private final Synchronizer synchronizer;

}
