/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package monalisa.addons.reachability;

import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import monalisa.data.pn.Place;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author Marcel
 */
public class CapacityFrame extends javax.swing.JFrame {

    private final ReachabilityDialog rd;

    private final HashMap<Place, Long> capacities;
    private static final Logger LOGGER = LogManager.getLogger(CapacityFrame.class);

    /**
     * Creates new form CapacityFrame
     * @param rd
     * @param capacities
     */
    public CapacityFrame(ReachabilityDialog rd, HashMap<Place, Long> capacities) {
        LOGGER.info("Initializing CapacityFrame.");
        initComponents();
        DefaultTableModel model = (DefaultTableModel) capTable.getModel();
        for (Place p : capacities.keySet()) {
            model.addRow(new Object[]{
                p,
                capacities.get(p)
            });
        }
        this.rd = rd;
        this.capacities = capacities;
        LOGGER.info("Successfully initialized CapcityFrame.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        capScrollPane = new javax.swing.JScrollPane();
        capTable = new javax.swing.JTable();
        capLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Capacities");

        capTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Place", "Capacity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

            public Object getValueAt(int row, int col) {
                if (col == 0) {
                    return capacities.keySet().toArray(new Place[0])[row];
                }
                else {
                    return super.getValueAt(row, col);
                }
            }
        });
        capScrollPane.setViewportView(capTable);

        capLabel.setText("Capacities");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(capLabel)
                        .addComponent(capScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(capLabel)
                .addGap(18, 18, 18)
                .addComponent(capScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        LOGGER.info("Saving capacities.");
        for (int i = 0; i < capTable.getRowCount(); ++i) {
            capacities.put((Place) capTable.getValueAt(i, 0), (Long) capTable.getValueAt(i, 1));
            if ((Long) capTable.getValueAt(i, 1) < 0) {
                JOptionPane.showMessageDialog(this, "Negative capacities detected. Please enter valid capacities.");
                return;
            }
        }
        rd.setCapacities(capacities);
        LOGGER.info("Successfully saved capacities.");
        this.dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel capLabel;
    private javax.swing.JScrollPane capScrollPane;
    private javax.swing.JTable capTable;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
