/*
 *
 *  This file is part of the software MonaLisa.
 *  MonaLisa is free software, dependent on non-free software. For more information read LICENCE and README.
 *
 *  (c) Department of Molecular Bioinformatics, Institute of Computer Science, Johann Wolfgang
 *  Goethe-University Frankfurt am Main, Germany
 *
 */
package monalisa.addons.tokensimulator;

/**
 *
 * @author Pavel Balazki.
 */
public class SynchronousTokenSimPrefPanel extends javax.swing.JPanel {
    //BEGIN VARIABLES DECLARATOIN
    private AsynchronousTokenSim ts;
    //END VARIABLES DECLARATION
    
    //BEGIN CONSTRUCTORS
    /**
     * Creates new form SynchronousTokenSimPrefPanel
     */
    private SynchronousTokenSimPrefPanel() {
        initComponents();
    }
    
    public SynchronousTokenSimPrefPanel(AsynchronousTokenSim tsN) {
        this.ts = tsN;
        initComponents();
    }
    //END CONSTRUCTORS

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fireAtOnceComboBox = new javax.swing.JComboBox();
        fireAtOnceLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        updateIntervalLabel = new javax.swing.JLabel();
        updateIntervalFormattedTextField = new javax.swing.JFormattedTextField();
        timeDelayJFormattedTextField = new javax.swing.JFormattedTextField();
        timeDelayJLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(this.getPreferredSize());
        setLayout(new java.awt.GridBagLayout());

        fireAtOnceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "20", "30", "40", "50", "60", "70", "80", "90", "100" }));
        fireAtOnceComboBox.setToolTipText(TokenSimulator.strings.get("STSFireAtOnceComboBoxT"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 3, 0);
        add(fireAtOnceComboBox, gridBagConstraints);

        fireAtOnceLabel.setText(TokenSimulator.strings.get("STSFireAtOnceLabel"));
        fireAtOnceLabel.setToolTipText("<html>The fraction of active transitions to fire per step can be selected. The standard value is 100%, <br />\nlowering the value will result in firing only a fraction of active transitions.<br />\nThe actual number of fired transitions is rounded up, so selecting 50% of three active transitions <br />\nwill result in firing of two transitions. The transitions are selected randomly with equal probability in each step.</html>\n");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 3, 3);
        add(fireAtOnceLabel, gridBagConstraints);

        jLabel1.setText(TokenSimulator.strings.get("STSFireAtOnceLabelPerCent"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 15, 0, 0);
        add(jLabel1, gridBagConstraints);

        updateIntervalLabel.setText(TokenSimulator.strings.get("ATSUpdateIntervalLabel"));
        updateIntervalLabel.setToolTipText("Controls the frequency of visual update in the NetViewer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(updateIntervalLabel, gridBagConstraints);

        updateIntervalFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        updateIntervalFormattedTextField.setText("1");
        updateIntervalFormattedTextField.setToolTipText(TokenSimulator.strings.get("ATSUpdateIntervalT"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        add(updateIntervalFormattedTextField, gridBagConstraints);

        timeDelayJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        timeDelayJFormattedTextField.setText("0");
        timeDelayJFormattedTextField.setToolTipText(TokenSimulator.strings.get("ATSTimeDelayT"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 3, 0);
        add(timeDelayJFormattedTextField, gridBagConstraints);

        timeDelayJLabel.setText(TokenSimulator.strings.get("ATSTimeDelayLabel"));
        timeDelayJLabel.setToolTipText("The time, the simulator will wait before performing the next step");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);
        add(timeDelayJLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JComboBox fireAtOnceComboBox;
    private javax.swing.JLabel fireAtOnceLabel;
    private javax.swing.JLabel jLabel1;
    protected javax.swing.JFormattedTextField timeDelayJFormattedTextField;
    private javax.swing.JLabel timeDelayJLabel;
    protected javax.swing.JFormattedTextField updateIntervalFormattedTextField;
    private javax.swing.JLabel updateIntervalLabel;
    // End of variables declaration//GEN-END:variables

}